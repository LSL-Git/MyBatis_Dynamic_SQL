<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lsl.ssm.dao.user.UserMapper" >

	<!-- 查询用户信息（分页显示） -->
	<select id="getUserListByPaging" resultType="User">
		select u.*, r.roleName from smbms_user u, smbms_role r
		where u.userRole = r.id
		<if test="userRole != null">
			and u.userRole = #{userRole}
		</if>
		<if test="userName != null and userName != ''">
			and u.userName like CONCAT ('%',#{userName},'%')
		</if>
		<!-- 
			limit x,y
			y:显示条数，即每页显示条数
			x:显示起始位置
			如:limit 0,5 则从第0条开始显示接下来5条记录
			  limit 5,5 则从第5条开始，显示接下来的5条记录
			  ...
		 -->
		order by u.creationDate DESC limit #{from}, #{pageSize}
	</select>

	<!-- 查询用户列表(choose) -->
	<select id="getUserList_choose" resultType="User">
		select * from smbms_user
		<trim prefix="where" prefixOverrides="and|or">
			<choose>
				<!-- choose类似于switch，从上往下，当满足条件时break(最多连接一条语句)，如果全都不满足条件则otherwise -->
				<when test="userName != null and userName != ''">
					and userName like CONCAT ('%',#{userName},'%')
				</when>
				<when test="userCode != null and userCode != ''">
					and userCode like CONCAT ('%',#{userCode},'%')
				</when>
				<when test="userRole != null">
					and userRole = #{userRole}
				</when>
				<otherwise>
					<!-- and YEAR(creationDate = YEAR(NOW()) -->
					and YEAR(creationDate) = YEAR(#{creationDate})
				</otherwise>
			</choose>
		</trim>		
	</select>

	<!-- 根据用户角色列表，获取该角色列表下用户列表信息-foreach_map -->	
	<select id="getUserByRoleId_foreach_map" resultMap="userMapByRole">
		select * from smbms_user where userRole in
		<!-- 
			foreach：迭代一个集合，通常用于in查询
			collection：array|list|map-key（必须指定,map-key对应传入map的key值）
			item:迭代子项，与#{roleIds}对应，
			open：句子组合开始符
			separator：句子组合分隔符
			close：句子组合结束符
		 -->
		<foreach collection="mKey" item="roleIdMap" open="(" separator="," close=")">
			#{roleIdMap}
		</foreach>
	</select>

	<!-- 根据用户角色列表，获取该角色列表下用户列表信息-foreach_list -->	
	<select id="getUserByRoleId_foreach_list" resultMap="userMapByRole">
		select * from smbms_user where userRole in
		<!-- 
			foreach：迭代一个集合，通常用于in查询
			collection：array|list|map-key（必须指定）
			item:迭代子项，与#{roleIds}对应，
			open：句子组合开始符
			separator：句子组合分隔符
			close：句子组合结束符
		 -->
		<foreach collection="list" item="roleIdList" open="(" separator="," close=")">
			#{roleIdList}
		</foreach>
	</select>

	<!-- 根据用户角色列表，获取该角色列表下用户列表信息-foreach_array -->	
	<select id="getUserByRoleId_foreach_array" resultMap="userMapByRole">
		select * from smbms_user where userRole in
		<!-- 
			foreach：迭代一个集合，通常用于in查询
			collection：array|list|map-key（必须指定）
			item:迭代子项，与#{roleIds}对应，
			open：句子组合开始符
			separator：句子组合分隔符
			close：句子组合结束符
		 -->
		<foreach collection="array" item="roleIds" open="(" separator="," close=")">
			#{roleIds}
		</foreach>
	</select>
	
	<resultMap type="User" id="userMapByRole">
		<id property="id" column="id"/>
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
	</resultMap>

	<!-- 修改用户信息-if-trim-suffix-suffixOverrides -->
	<update id="modify" parameterType="User">
		update smbms_user
		<trim prefix="set" suffixOverrides="," suffix="where id = #{id}">
			<!-- prefix:前缀，在将下面的句子连接前添加，这里添加为’set‘
				suffixOverrides：后缀覆盖，即将下面的句子连接后的最后一个’，‘,替换成’where id=#{id}‘
				suffix：要替换成的句子
				这里连接的句子为:update smbms_user set userCode = ?,...,modifyDate = ? where id = ?
			-->
			<if test="userCode != null">userCode=#{userCode},</if>
			<if test="userName != null">userName=#{userName},</if>
			<if test="userPassword != null">userPassword=#{userPassword},</if>
			<if test="gender != null">gender=#{gender},</if>
			<if test="birthday != null">birthday=#{birthday},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="address != null">address=#{address},</if>
			<if test="userRole != null">userRole=#{userRole},</if>
			<if test="modifyBy != null">modifyBy=#{modifyBy},</if>
			<if test="modifyDate != null">modifyDate=#{modifyDate},</if>
		</trim>
	</update>
	
	<!-- 修改用户信息-if-set -->
	<!--<update id="modify" parameterType="User">
		update smbms_user
		<set>
			<if test="userCode != null">userCode=#{userCode},</if>
			<if test="userName != null">userName=#{userName},</if>
			<if test="userPassword != null">userPassword=#{userPassword},</if>
			<if test="gender != null">gender=#{gender},</if>
			<if test="birthday != null">birthday=#{birthday},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="address != null">address=#{address},</if>
			<if test="userRole != null">userRole=#{userRole},</if>
			<if test="modifyBy != null">modifyBy=#{modifyBy},</if>
			<if test="modifyDate != null">modifyDate=#{modifyDate}</if>
		</set>
		where id=#{id}
	</update>-->

	<!-- 当数据库中的字段信息与对象的属性不一致时需要通过resultMap来映射 -->
	<resultMap type="User" id="userList">
		<result property="id" column="id" />
		<result property="userCode" column="userCode"/>
		<result property="userName" column="userName"/>
		<result property="phone" column="phone"/>
		<result property="birthday" column="birthday"/>
		<result property="gender" column="gender"/>
		<result property="userRole" column="userRole"/>
		<result property="userRoleName" column="roleName"/>
	</resultMap>
	
	<!-- 查询用户列表 动态条件查询-if-trim-prefix-prefixOverrides -->
	<select id="getUserList" resultMap="userList">
		select * from smbms_user
		<trim prefix="where" prefixOverrides="and|or">
			<!-- 
				如果满足条件，下面的语句会连接到上面的语句，trim会将第一个连上来的语句的and或or替换成where
				prefix:前缀  prefixOverrides：被替换的词，用 ’|‘分隔，不能有空格（我的测试是这样）
			 -->
			<if test="userName != null and userName != ''">
				and userName like CONCAT ('%',#{userName},'%')
			</if>
			<if test="userRole != null">
				and userRole = #{userRole}
			</if>
		</trim>
	</select>
	
	<!-- 查询用户列表 动态条件查询-if-where 
	<select id="getUserList" resultMap="userList">
		select u.*, r.roleName from smbms_user u, smbms_role r
		<where>
			u.userRole = r.id
			<if test="userName != null and userName != ''" >
				and u.userName like CONCAT ('%',#{userName},'%')
			</if>
			<if test="userRole != null">
				and r.userRole = #{userRole}
			</if>
		</where>
	</select>-->
	
	<!-- 查询用户列表 动态条件查询-if 
	<select id="getUserList" resultMap="userList">
		select u.*, r.roleName from smbms_user u, smbms_role r
		where u.userRole = r.id
		<if test="userRole != null">
			and u.userRole = #{userRole}
		</if>
		<if test="userName != null and userName != ''">
			and u.userName like CONCAT ('%',#{userName},'%')
		</if>
	</select>
	-->
	
	<!-- 
		  简单改造getUserList：
		  若 只传入一个参数：userRole，而不传入参数：userName的时候，控制台报sql异常错误
		  查看日志中sql语句：select * from smbms_user where and userRole = ? 
		  若 不传入任何参数：控制台报sql异常错误
		  查看日志中sql语句：select * from smbms_user where
		 
		<select id="getUserList" resultType="User">
			select * from smbms_user where
				<if test="userName != null and userName != ''">
					userName like CONCAT ('%',#{userName},'%') 
				</if>
				<if test="userRole != null">
					and userRole = #{userRole}
				</if>
		</select>
		  
		  演示如何灵活处理where and|or :
	-->
</mapper>
